node 0
     level 0 friend 0 = 1
     level 0 friend 1 = 2
     level 0 friend 2 = 3
     level 0 friend 3 = 4
     level 0 friend 4 = 5
     level 0 friend 5 = 7
     level 0 friend 6 = 8
     level 0 friend 7 = 9
     level 0 friend 8 = 9



node 1
     level 0 friend 0 = 0
     level 0 friend 1 = 2
     level 0 friend 2 = 3
     level 0 friend 3 = 4
     level 0 friend 4 = 5
     level 0 friend 5 = 7
     level 0 friend 6 = 8
     level 0 friend 7 = 9
     level 0 friend 8 = 9
     level 1 friend 0 = 2
     level 1 friend 1 = 3
     level 1 friend 2 = 4
     level 1 friend 3 = 5
     level 1 friend 4 = 7
     level 1 friend 5 = 8
     level 1 friend 6 = 9
     level 1 friend 7 = 9
     level 2 friend 0 = 3
     level 2 friend 1 = 4
     level 2 friend 2 = 5
     level 2 friend 3 = 9
     level 2 friend 4 = 9



node 2
     level 0 friend 0 = 1
     level 0 friend 1 = 0
     level 1 friend 0 = 1



node 3
     level 0 friend 0 = 1
     level 0 friend 1 = 0
     level 1 friend 0 = 1
     level 2 friend 0 = 1



node 4
     level 0 friend 0 = 1
     level 0 friend 1 = 0
     level 1 friend 0 = 1
     level 2 friend 0 = 1



node 5
     level 0 friend 0 = 1
     level 0 friend 1 = 0
     level 1 friend 0 = 1
     level 2 friend 0 = 1



node 6
     level 0 friend 0 = 1
     level 0 friend 1 = 0
     level 1 friend 0 = 1



node 7
     level 0 friend 0 = 1
     level 0 friend 1 = 0
     level 1 friend 0 = 1
     level 2 friend 0 = 1



node 8
     level 0 friend 0 = 1
     level 0 friend 1 = 0
     level 1 friend 0 = 1
     level 2 friend 0 = 1




HNSW Index
M: 32, efConstruction: 2000
DelaunayType: 1
Number of nodes: 9
Max layer: 2
Level 0: 1 nodes, average number of connections 3
Level 1: 2 nodes, average number of connections 1
Level 2: 6 nodes, average number of connections 1
Memory use for data: 180 (20 bytes / point)
Memory use for index: 4096 (avg 455 bytes / point)

([]hnsw.Result) (len=50) {
  (hnsw.Result) {
    ID: (*node.Node)(<nil>),
    Distance: (float32) 0
  },
  (hnsw.Result) {
    ID: (*node.Node)(<nil>),
    Distance: (float32) 0
  },
  (hnsw.Result) {
    ID: (*node.Node)(<nil>),
    Distance: (float32) 0
  },
  (hnsw.Result) {
    ID: (*node.Node)(<nil>),
    Distance: (float32) 0
  },
  (hnsw.Result) {
    ID: (*node.Node)(<nil>),
    Distance: (float32) 0
  },
  (hnsw.Result) {
    ID: (*node.Node)(<nil>),
    Distance: (float32) 0
  },
  (hnsw.Result) {
    ID: (*node.Node)(<nil>),
    Distance: (float32) 0
  },
  (hnsw.Result) {
    ID: (*node.Node)(<nil>),
    Distance: (float32) 0
  },
  (hnsw.Result) {
    ID: (*node.Node)(<nil>),
    Distance: (float32) 0
  },
  (hnsw.Result) {
    ID: (*node.Node)(<nil>),
    Distance: (float32) 0
  },
  (hnsw.Result) {
    ID: (*node.Node)(<nil>),
    Distance: (float32) 0
  },
  (hnsw.Result) {
    ID: (*node.Node)(<nil>),
    Distance: (float32) 0
  },
  (hnsw.Result) {
    ID: (*node.Node)(<nil>),
    Distance: (float32) 0
  },
  (hnsw.Result) {
    ID: (*node.Node)(<nil>),
    Distance: (float32) 0
  },
  (hnsw.Result) {
    ID: (*node.Node)(<nil>),
    Distance: (float32) 0
  },
  (hnsw.Result) {
    ID: (*node.Node)(<nil>),
    Distance: (float32) 0
  },
  (hnsw.Result) {
    ID: (*node.Node)(<nil>),
    Distance: (float32) 0
  },
  (hnsw.Result) {
    ID: (*node.Node)(<nil>),
    Distance: (float32) 0
  },
  (hnsw.Result) {
    ID: (*node.Node)(<nil>),
    Distance: (float32) 0
  },
  (hnsw.Result) {
    ID: (*node.Node)(<nil>),
    Distance: (float32) 0
  },
  (hnsw.Result) {
    ID: (*node.Node)(<nil>),
    Distance: (float32) 0
  },
  (hnsw.Result) {
    ID: (*node.Node)(<nil>),
    Distance: (float32) 0
  },
  (hnsw.Result) {
    ID: (*node.Node)(<nil>),
    Distance: (float32) 0
  },
  (hnsw.Result) {
    ID: (*node.Node)(<nil>),
    Distance: (float32) 0
  },
  (hnsw.Result) {
    ID: (*node.Node)(<nil>),
    Distance: (float32) 0
  },
  (hnsw.Result) {
    ID: (*node.Node)(<nil>),
    Distance: (float32) 0
  },
  (hnsw.Result) {
    ID: (*node.Node)(<nil>),
    Distance: (float32) 0
  },
  (hnsw.Result) {
    ID: (*node.Node)(<nil>),
    Distance: (float32) 0
  },
  (hnsw.Result) {
    ID: (*node.Node)(<nil>),
    Distance: (float32) 0
  },
  (hnsw.Result) {
    ID: (*node.Node)(<nil>),
    Distance: (float32) 0
  },
  (hnsw.Result) {
    ID: (*node.Node)(<nil>),
    Distance: (float32) 0
  },
  (hnsw.Result) {
    ID: (*node.Node)(<nil>),
    Distance: (float32) 0
  },
  (hnsw.Result) {
    ID: (*node.Node)(<nil>),
    Distance: (float32) 0
  },
  (hnsw.Result) {
    ID: (*node.Node)(<nil>),
    Distance: (float32) 0
  },
  (hnsw.Result) {
    ID: (*node.Node)(<nil>),
    Distance: (float32) 0
  },
  (hnsw.Result) {
    ID: (*node.Node)(<nil>),
    Distance: (float32) 0
  },
  (hnsw.Result) {
    ID: (*node.Node)(<nil>),
    Distance: (float32) 0
  },
  (hnsw.Result) {
    ID: (*node.Node)(<nil>),
    Distance: (float32) 0
  },
  (hnsw.Result) {
    ID: (*node.Node)(<nil>),
    Distance: (float32) 0
  },
  (hnsw.Result) {
    ID: (*node.Node)(<nil>),
    Distance: (float32) 0
  },
  (hnsw.Result) {
    ID: (*node.Node)(<nil>),
    Distance: (float32) 0
  },
  (hnsw.Result) {
    ID: (*node.Node)(<nil>),
    Distance: (float32) 0
  },
  (hnsw.Result) {
    ID: (*node.Node)(<nil>),
    Distance: (float32) 0
  },
  (hnsw.Result) {
    ID: (*node.Node)(<nil>),
    Distance: (float32) 0
  },
  (hnsw.Result) {
    ID: (*node.Node)(<nil>),
    Distance: (float32) 0
  },
  (hnsw.Result) {
    ID: (*node.Node)(<nil>),
    Distance: (float32) 0
  },
  (hnsw.Result) {
    ID: (*node.Node)(<nil>),
    Distance: (float32) 0
  },
  (hnsw.Result) {
    ID: (*node.Node)(<nil>),
    Distance: (float32) 0
  },
  (hnsw.Result) {
    ID: (*node.Node)({
      RWMutex: (sync.RWMutex) {
        w: (sync.Mutex) {
          state: (int32) 0,
          sema: (uint32) 0
        },
        writerSem: (uint32) 0,
        readerSem: (uint32) 0,
        readerCount: (int32) 0,
        readerWait: (int32) 0
      },
      locked: (bool) false,
      P: (node.Point) (len=5) {
        (float32) 79,
        (float32) 27,
        (float32) 105,
        (float32) 14,
        (float32) 83
      },
      Level: (int) 2,
      Friends: ([][]*node.Node) (len=1) {
        ([]*node.Node) (len=1) {
          (*node.Node)({
            RWMutex: (sync.RWMutex) {
              w: (sync.Mutex) {
                state: (int32) 0,
                sema: (uint32) 0
              },
              writerSem: (uint32) 0,
              readerSem: (uint32) 0,
              readerCount: (int32) 0,
              readerWait: (int32) 0
            },
            locked: (bool) false,
            P: (node.Point) (len=5) {
              (float32) 0,
              (float32) 0,
              (float32) 0,
              (float32) 0,
              (float32) 0
            },
            Level: (int) 0,
            Friends: ([][]*node.Node) <nil>,
            Myid: (uint32) 0
          })
        }
      },
      Myid: (uint32) 1
    }),
    Distance: (float32) 102698
  },
  (hnsw.Result) {
    ID: (*node.Node)({
      RWMutex: (sync.RWMutex) {
        w: (sync.Mutex) {
          state: (int32) 0,
          sema: (uint32) 0
        },
        writerSem: (uint32) 0,
        readerSem: (uint32) 0,
        readerCount: (int32) 0,
        readerWait: (int32) 0
      },
      locked: (bool) false,
      P: (node.Point) (len=5) {
        (float32) 0,
        (float32) 0,
        (float32) 0,
        (float32) 0,
        (float32) 0
      },
      Level: (int) 0,
      Friends: ([][]*node.Node) <nil>,
      Myid: (uint32) 0
    }),
    Distance: (float32) +Inf
  }
}
